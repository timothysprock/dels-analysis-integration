function [departureProcess, departureEdgeSet] = mapDepartures2DepartureProcessNode(processSet, edgeSet, productArrivalRate, processPlanSet)
%UNTITLED6 Summary of this function goes here
%   Detailed explanation goes here

nProcess = max(max(processPlanSet));
departureProcess = Process;
departureProcess.instanceID = nProcess+2;
departureProcess.name = 'Departure_Process';
departureProcess.typeID = 'DepartureProcess';
departureProcess.concurrentProcessingCapacity = inf;
departureProcess.averageServiceTime = 0.05;
departureProcess.ProcessTime_Stdev = eps;
departureProcess.storageCapacity = inf;
departureProcess.routingProbability = [1 0];

departureEdgeSet(nProcess) = FlowNetworkLink;
probMatrix = mapProcessPlan2ProbMatrix( processPlanList, productArrivalRate);
rowSum = sum(P,2);

for ii = 1:length(nProcess)
    if rowSum(ii) < 1
        departureEdgeSet(ii).instanceID = length(edgeSet) + ii;
        departureEdgeSet(ii).sourceFlowNetworkID =  processSet(I(ii)).instanceID;
        departureEdgeSet(ii).sourceFlowNetwork = processSet(I(ii));
        departureEdgeSet(ii).targetFlowNetworkID = departureProcess.instanceID;
        departureEdgeSet(ii).targetFlowNetwork = departureProcess;
        departureEdgeSet(ii).typeID = 'Job';

        %Find product's who's first process step is process ii (this)
        idx = find(processPlanSet(:,1) == ii); 
        departureEdgeSet(ii).flowTypeAllowed = idx;
        departureEdgeSet(ii).flowAmount = productArrivalRate;
    end
end

end

